{
  "comments": [
    {
      "key": {
        "uuid": "e0ac896b_d6bb2ad0",
        "filename": "include/password.hpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2021-05-25T09:14:01Z",
      "side": 1,
      "message": "why its not uint8_t like maxHashSize and maxSeedSize",
      "range": {
        "startLine": 41,
        "startChar": 10,
        "endLine": 41,
        "endChar": 19
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "731c721b_db1f7a1c",
        "filename": "include/password.hpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2021-05-26T13:54:43Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "e0ac896b_d6bb2ad0",
      "range": {
        "startLine": 41,
        "startChar": 10,
        "endLine": 41,
        "endChar": 19
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1d61966_26a42e85",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2021-05-25T09:14:01Z",
      "side": 1,
      "message": "[] operator of std::array cause undefined behaviour if index is larger. can we verify pwd.size() before accesing?",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 21
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69b608d4_52a940b8",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2021-05-26T13:54:43Z",
      "side": 1,
      "message": "added",
      "parentUuid": "f1d61966_26a42e85",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 21
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b78f7a60_115b5f8c",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2021-05-25T09:14:01Z",
      "side": 1,
      "message": "can we use sizeof(uint16_t) here also? to avoid magic number",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 45
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1322f68_35936116",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2021-05-26T13:54:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b78f7a60_115b5f8c",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 45
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d33487d_c7b27008",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2021-05-25T09:14:01Z",
      "side": 1,
      "message": "previously rawData.length() was its number of characters right? convertUnicode returns (pwd.size() * sizeof(uint16_t) + 2). So will there be an extra 2?",
      "range": {
        "startLine": 64,
        "startChar": 17,
        "endLine": 64,
        "endChar": 33
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5cecaf3_b8e1f3f4",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000295
      },
      "writtenOn": "2021-05-26T07:06:21Z",
      "side": 1,
      "message": "Yes . In BIOS, NULL character will be stored in 2 bytes.",
      "parentUuid": "4d33487d_c7b27008",
      "range": {
        "startLine": 64,
        "startChar": 17,
        "endLine": 64,
        "endChar": 33
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d443851_ededd3d2",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000928
      },
      "writtenOn": "2021-05-25T09:14:01Z",
      "side": 1,
      "message": "sizeof(std::vector) will give its internal representation size. right? Why are we not using output.size() * sizeof(uint8_t)?",
      "range": {
        "startLine": 72,
        "startChar": 58,
        "endLine": 72,
        "endChar": 72
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8620c7c4_fe8ae979",
        "filename": "src/password.cpp",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2021-05-26T13:54:43Z",
      "side": 1,
      "message": "corrected. Thanks!",
      "parentUuid": "6d443851_ededd3d2",
      "range": {
        "startLine": 72,
        "startChar": 58,
        "endLine": 72,
        "endChar": 72
      },
      "revId": "41a4df778ab587e0aac80d2a590f995064bb77b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}